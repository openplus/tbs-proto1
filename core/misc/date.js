/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Modernizr, Drupal) {
  Drupal.behaviors.date = {
    attach: function attach(context, settings) {
      var $context = $(context);

      if (Modernizr.inputtypes.date === true) {
        return;
      }
      $context.find('input[data-drupal-date-format]').once('datePicker').each(function () {
        var $input = $(this);
        var datepickerSettings = {};
        var dateFormat = $input.data('drupalDateFormat');

        datepickerSettings.dateFormat = dateFormat.replace('Y', 'yy').replace('m', 'mm').replace('d', 'dd');

        if ($input.attr('min')) {
          datepickerSettings.minDate = $input.attr('min');
        }
        if ($input.attr('max')) {
          datepickerSettings.maxDate = $input.attr('max');
        }
        $input.datepicker(datepickerSettings);
      });

      $context.find('input[type="time"]').once('timePicker').each(function () {
        var $input = $(this);
        var options = {
          'timeFormat': 'H:i'
        };
        $input.timepicker(options);
      });
    },
    detach: function detach(context, settings, trigger) {
      if (trigger === 'unload') {
        $(context).find('input[data-drupal-date-format]').findOnce('datePicker').datepicker('destroy');
      }
    }
  };
})(jQuery, Modernizr, Drupal);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGUuZXM2LmpzIl0sIm5hbWVzIjpbIiQiLCJNb2Rlcm5penIiLCJEcnVwYWwiLCJiZWhhdmlvcnMiLCJkYXRlIiwiYXR0YWNoIiwiY29udGV4dCIsInNldHRpbmdzIiwiJGNvbnRleHQiLCJpbnB1dHR5cGVzIiwiZmluZCIsIm9uY2UiLCJlYWNoIiwiJGlucHV0IiwiZGF0ZXBpY2tlclNldHRpbmdzIiwiZGF0ZUZvcm1hdCIsImRhdGEiLCJyZXBsYWNlIiwiYXR0ciIsIm1pbkRhdGUiLCJtYXhEYXRlIiwiZGF0ZXBpY2tlciIsIm9wdGlvbnMiLCJ0aW1lcGlja2VyIiwiZGV0YWNoIiwidHJpZ2dlciIsImZpbmRPbmNlIiwialF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBS0EsQ0FBQyxVQUFVQSxDQUFWLEVBQWFDLFNBQWIsRUFBd0JDLE1BQXhCLEVBQWdDOztBQUUvQjs7QUFjQUEsU0FBT0MsU0FBUCxDQUFpQkMsSUFBakIsR0FBd0I7QUFDdEJDLFlBQVEsZ0JBQVVDLE9BQVYsRUFBbUJDLFFBQW5CLEVBQTZCO0FBQ25DLFVBQUlDLFdBQVdSLEVBQUVNLE9BQUYsQ0FBZjs7QUFFQSxVQUFJTCxVQUFVUSxVQUFWLENBQXFCTCxJQUFyQixLQUE4QixJQUFsQyxFQUF3QztBQUN0QztBQUNEO0FBQ0RJLGVBQVNFLElBQVQsQ0FBYyxnQ0FBZCxFQUFnREMsSUFBaEQsQ0FBcUQsWUFBckQsRUFBbUVDLElBQW5FLENBQXdFLFlBQVk7QUFDbEYsWUFBSUMsU0FBU2IsRUFBRSxJQUFGLENBQWI7QUFDQSxZQUFJYyxxQkFBcUIsRUFBekI7QUFDQSxZQUFJQyxhQUFhRixPQUFPRyxJQUFQLENBQVksa0JBQVosQ0FBakI7O0FBR0FGLDJCQUFtQkMsVUFBbkIsR0FBZ0NBLFdBQzdCRSxPQUQ2QixDQUNyQixHQURxQixFQUNoQixJQURnQixFQUU3QkEsT0FGNkIsQ0FFckIsR0FGcUIsRUFFaEIsSUFGZ0IsRUFHN0JBLE9BSDZCLENBR3JCLEdBSHFCLEVBR2hCLElBSGdCLENBQWhDOztBQUtBLFlBQUlKLE9BQU9LLElBQVAsQ0FBWSxLQUFaLENBQUosRUFBd0I7QUFDdEJKLDZCQUFtQkssT0FBbkIsR0FBNkJOLE9BQU9LLElBQVAsQ0FBWSxLQUFaLENBQTdCO0FBQ0Q7QUFDRCxZQUFJTCxPQUFPSyxJQUFQLENBQVksS0FBWixDQUFKLEVBQXdCO0FBQ3RCSiw2QkFBbUJNLE9BQW5CLEdBQTZCUCxPQUFPSyxJQUFQLENBQVksS0FBWixDQUE3QjtBQUNEO0FBQ0RMLGVBQU9RLFVBQVAsQ0FBa0JQLGtCQUFsQjtBQUNELE9BbEJEOztBQXFCQU4sZUFBU0UsSUFBVCxDQUFjLG9CQUFkLEVBQW9DQyxJQUFwQyxDQUF5QyxZQUF6QyxFQUF1REMsSUFBdkQsQ0FBNEQsWUFBWTtBQUN0RSxZQUFJQyxTQUFTYixFQUFFLElBQUYsQ0FBYjtBQUNBLFlBQUlzQixVQUFVO0FBQ1osd0JBQWM7QUFERixTQUFkO0FBR0FULGVBQU9VLFVBQVAsQ0FBa0JELE9BQWxCO0FBQ0QsT0FORDtBQU9ELEtBbkNxQjtBQW9DdEJFLFlBQVEsZ0JBQVVsQixPQUFWLEVBQW1CQyxRQUFuQixFQUE2QmtCLE9BQTdCLEVBQXNDO0FBQzVDLFVBQUlBLFlBQVksUUFBaEIsRUFBMEI7QUFDeEJ6QixVQUFFTSxPQUFGLEVBQVdJLElBQVgsQ0FBZ0IsZ0NBQWhCLEVBQWtEZ0IsUUFBbEQsQ0FBMkQsWUFBM0QsRUFBeUVMLFVBQXpFLENBQW9GLFNBQXBGO0FBQ0Q7QUFDRjtBQXhDcUIsR0FBeEI7QUEyQ0QsQ0EzREQsRUEyREdNLE1BM0RILEVBMkRXMUIsU0EzRFgsRUEyRHNCQyxNQTNEdEIiLCJmaWxlIjoiZGF0ZS5lczYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlXG4gKiBQb2x5ZmlsbCBmb3IgSFRNTDUgZGF0ZSBpbnB1dC5cbiAqL1xuXG4oZnVuY3Rpb24gKCQsIE1vZGVybml6ciwgRHJ1cGFsKSB7XG5cbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIC8qKlxuICAgKiBBdHRhY2ggZGF0ZXBpY2tlciBmYWxsYmFjayBvbiBkYXRlIGVsZW1lbnRzLlxuICAgKlxuICAgKiBAdHlwZSB7RHJ1cGFsfmJlaGF2aW9yfVxuICAgKlxuICAgKiBAcHJvcCB7RHJ1cGFsfmJlaGF2aW9yQXR0YWNofSBhdHRhY2hcbiAgICogICBBdHRhY2hlcyB0aGUgYmVoYXZpb3IuIEFjY2VwdHMgaW4gYHNldHRpbmdzLmRhdGVgIGFuIG9iamVjdCBsaXN0aW5nXG4gICAqICAgZWxlbWVudHMgdG8gcHJvY2Vzcywga2V5ZWQgYnkgdGhlIEhUTUwgSUQgb2YgdGhlIGZvcm0gZWxlbWVudCBjb250YWluaW5nXG4gICAqICAgdGhlIGh1bWFuLXJlYWRhYmxlIHZhbHVlLiBFYWNoIGVsZW1lbnQgaXMgYW4gZGF0ZXBpY2tlciBzZXR0aW5ncyBvYmplY3QuXG4gICAqIEBwcm9wIHtEcnVwYWx+YmVoYXZpb3JEZXRhY2h9IGRldGFjaFxuICAgKiAgIERldGFjaCB0aGUgYmVoYXZpb3IgZGVzdHJveWluZyBkYXRlcGlja2VycyBvbiBlZmZlY3RlZCBlbGVtZW50cy5cbiAgICovXG4gIERydXBhbC5iZWhhdmlvcnMuZGF0ZSA9IHtcbiAgICBhdHRhY2g6IGZ1bmN0aW9uIChjb250ZXh0LCBzZXR0aW5ncykge1xuICAgICAgdmFyICRjb250ZXh0ID0gJChjb250ZXh0KTtcbiAgICAgIC8vIFNraXAgaWYgZGF0ZSBhcmUgc3VwcG9ydGVkIGJ5IHRoZSBicm93c2VyLlxuICAgICAgaWYgKE1vZGVybml6ci5pbnB1dHR5cGVzLmRhdGUgPT09IHRydWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgJGNvbnRleHQuZmluZCgnaW5wdXRbZGF0YS1kcnVwYWwtZGF0ZS1mb3JtYXRdJykub25jZSgnZGF0ZVBpY2tlcicpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgJGlucHV0ID0gJCh0aGlzKTtcbiAgICAgICAgdmFyIGRhdGVwaWNrZXJTZXR0aW5ncyA9IHt9O1xuICAgICAgICB2YXIgZGF0ZUZvcm1hdCA9ICRpbnB1dC5kYXRhKCdkcnVwYWxEYXRlRm9ybWF0Jyk7XG4gICAgICAgIC8vIFRoZSBkYXRlIGZvcm1hdCBpcyBzYXZlZCBpbiBQSFAgc3R5bGUsIHdlIG5lZWQgdG8gY29udmVydCB0byBqUXVlcnlcbiAgICAgICAgLy8gZGF0ZXBpY2tlci5cbiAgICAgICAgZGF0ZXBpY2tlclNldHRpbmdzLmRhdGVGb3JtYXQgPSBkYXRlRm9ybWF0XG4gICAgICAgICAgLnJlcGxhY2UoJ1knLCAneXknKVxuICAgICAgICAgIC5yZXBsYWNlKCdtJywgJ21tJylcbiAgICAgICAgICAucmVwbGFjZSgnZCcsICdkZCcpO1xuICAgICAgICAvLyBBZGQgbWluIGFuZCBtYXggZGF0ZSBpZiBzZXQgb24gdGhlIGlucHV0LlxuICAgICAgICBpZiAoJGlucHV0LmF0dHIoJ21pbicpKSB7XG4gICAgICAgICAgZGF0ZXBpY2tlclNldHRpbmdzLm1pbkRhdGUgPSAkaW5wdXQuYXR0cignbWluJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCRpbnB1dC5hdHRyKCdtYXgnKSkge1xuICAgICAgICAgIGRhdGVwaWNrZXJTZXR0aW5ncy5tYXhEYXRlID0gJGlucHV0LmF0dHIoJ21heCcpO1xuICAgICAgICB9XG4gICAgICAgICRpbnB1dC5kYXRlcGlja2VyKGRhdGVwaWNrZXJTZXR0aW5ncyk7XG4gICAgICB9KTtcblxuICAgICAgLy8gQXBwbHkgdGhlIHRpbWUtcGlja2VyIHBvbHlmaWxsIHRvIHRpbWUgaW5wdXQgZWxlbWVudHMuXG4gICAgICAkY29udGV4dC5maW5kKCdpbnB1dFt0eXBlPVwidGltZVwiXScpLm9uY2UoJ3RpbWVQaWNrZXInKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbGV0ICRpbnB1dCA9ICQodGhpcyk7XG4gICAgICAgIGxldCBvcHRpb25zID0ge1xuICAgICAgICAgICd0aW1lRm9ybWF0JzogJ0g6aTpzJyxcbiAgICAgICAgfTtcbiAgICAgICAgJGlucHV0LnRpbWVwaWNrZXIob3B0aW9ucyk7XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGRldGFjaDogZnVuY3Rpb24gKGNvbnRleHQsIHNldHRpbmdzLCB0cmlnZ2VyKSB7XG4gICAgICBpZiAodHJpZ2dlciA9PT0gJ3VubG9hZCcpIHtcbiAgICAgICAgJChjb250ZXh0KS5maW5kKCdpbnB1dFtkYXRhLWRydXBhbC1kYXRlLWZvcm1hdF0nKS5maW5kT25jZSgnZGF0ZVBpY2tlcicpLmRhdGVwaWNrZXIoJ2Rlc3Ryb3knKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbn0pKGpRdWVyeSwgTW9kZXJuaXpyLCBEcnVwYWwpO1xuIl19